
#include "XL_common.h"

byte led_mode;
byte led_level;
byte RTC_led_level; 
byte led_level_temp;
byte temp_byte_value;
word XL_temp_count;

#if RGB_Color

//byte led_mode_RGB;
byte Color_mode;
byte RTC_mode;

byte LED_R_PWM_expect;
byte LED_G_PWM_expect;
byte LED_B_PWM_expect;

/*
byte LED_R_PWM_expect_fade;
byte LED_G_PWM_expect_fade;
byte LED_B_PWM_expect_fade;
*/
byte LED_R_PWM_temp;
byte LED_G_PWM_temp;
byte LED_B_PWM_temp;

byte led_speed;
byte led_level_1_16;


#if RTC_mode_auto_Max
	bit RTC_mode_auto_first_F;
#endif


byte  LED_duty;// word



void LED_PWM_LEVEL_TABLE(); 

void R_LED_Color_LEVEL_TABLE();
void G_LED_Color_LEVEL_TABLE();
void B_LED_Color_LEVEL_TABLE();


void LED_PWM_16_LEVEL_TABLE()
{
	led_level_temp = 0;/*
	if( temp_byte_value == 16 )
	{
		led_level_temp = RTC_led_level;
		if( led_level_1_16 == 16  )
		{
			led_level_temp = led_level_Max;
		}
	}
	else*/
	{
		while( temp_byte_value -- )
		{
			led_level_temp +=led_level_1_16;
		}
	}
}

void Color_INIT_LEVEL_TAB_RGB()
{
//	if( Color_mode )

/*
	if( RTC_led_level >= led_level_Max )
		led_level_1_16 = 16;
	else*/
	RTC_led_level = led_level;
	led_level_1_16 = ( RTC_led_level ) >>4;

	{
	/*
		if( led_mode <= Color_mode_Max )
		{
				RTC_led_level = led_level;
		}
		else
		{
			if( led_mode != Color_mode_Max + RTC_mode_Max +  3   )// ||  guanji_RTC_mode_F
				RTC_led_level = led_level;
		}
*/
		Color_mode = led_mode;

		a=Color_mode;
		R_LED_Color_LEVEL_TABLE(); // LED_W_PWM = 0;
		temp_byte_value = a ;
		LED_PWM_16_LEVEL_TABLE();
		LED_R_PWM_expect = led_level_temp;
	//	LED_R_PWM_expect = led_level_Max - led_level_temp;

		a=Color_mode;
		G_LED_Color_LEVEL_TABLE(); // LED_W_PWM = 0;
		temp_byte_value = a ;
		LED_PWM_16_LEVEL_TABLE();
		LED_G_PWM_expect = led_level_temp;

		a=Color_mode;
		B_LED_Color_LEVEL_TABLE(); // LED_W_PWM = 0;
		temp_byte_value = a ;
		LED_PWM_16_LEVEL_TABLE();
		LED_B_PWM_expect = led_level_temp;
//		engint;
	}
}



void R_LED_Color_LEVEL_TABLE()
{
	a += 1;
	pcadd a;
	ret 0//255  1 

	ret 16//255  
	ret 16//255  
	ret 16//255  
	ret 16//255  
	ret 16//255  5+1

	ret 0//255 
	ret 0//255 
	ret 0//255 
	ret 0//255 
	ret 0//255 5+1+5

	ret 0//255  
	ret 4//255  
	ret 8//255  
	ret 12//255  
	ret 16//255  5+1+5+5

	ret 16//255  17
}

void G_LED_Color_LEVEL_TABLE()
{
	a += 1;
	pcadd a;
	ret 0//255 

	ret 0//255  
	ret 4//255  
	ret 8//255  
	ret 12//255  
	ret 16//255  

	ret 16//255  
	ret 16//255  
	ret 16//255  
	ret 16//255  
	ret 16//255 

	ret 0//255 
	ret 0//255 
	ret 0//255 
	ret 0//255 
	ret 0//255 

	ret 16//255  
}

void B_LED_Color_LEVEL_TABLE()
{
	a += 1;
	pcadd a;
	ret 0//255 

	ret 0//255 
	ret 0//255 
	ret 0//255 
	ret 0//255 
	ret 0//255  

	ret 0//255  
	ret 4//255  
	ret 8//255  
	ret 12//255  
	ret 16//255  

	ret 16//255  
	ret 16//255  
	ret 16//255  
	ret 16//255  
	ret 16//255  

	ret 16//255  
}

#endif