

#include "XL_common.h"

#if YW_Color

void IR_DECODE();
void IR_KEY_DEAL();
void IR_Key_Table();

byte IR_LED_ON_F;
byte IR_KEY_L_deal;

#if IR_Long_key

#endif



#if XL_Wuxian

byte IR_SETP;
byte ir_tick;
byte ir_long_tick;

bit ir_err_f;
bit IR_H_F;
bit ir_repeat_f;

bit ir_ok_F;
bit ir_deal_F;
bit ir_end_F;
byte ir_count;


byte ADDR_H;
byte ADDR_L;
byte IR_KEY_L;

#if  XL_wuxian_IR

	byte ir_long_tick_err;
	byte IR_KEY_H;

#elif XL_wuxian_433

	byte ir_tick_1ms;
	byte IR_KEY_L1;

#endif

byte ir_data_temp;

void IR_DECODE()
{
#if XL_wuxian_433
	if (IR_in == 1)
	{
		if (!IR_H_F)
		{
			if (IR_SETP == 1)
			{
				if ((ir_tick_1ms > 7) && (ir_tick_1ms < 14) ) 	IR_SETP++;//  9MS   5.5-7MS 
				else											ir_err_f = 1;	
			}
			else if ((IR_SETP >= 3) && (IR_SETP < 50))
			{
				if ((ir_tick >= 2) && (ir_tick < 45))   IR_SETP++;
				else  									ir_err_f = 1;
			}
			ir_tick_1ms = 0;
			ir_tick = 0;
			IR_H_F = 1;
		}
	}
	else
	{
		if (IR_H_F)
		{
			//ir_long_tick = 0;
			if (IR_SETP == 0)     IR_SETP++;
			else if ((IR_SETP >= 2) && (IR_SETP < 50))
			{
				if ((ir_tick >= 2) && (ir_tick < 45)) // 400-2MS IR_time_1mS_tick
				{
					IR_SETP++;
/*
					if (ir_tick > 18)
					{
					ir_data_temp = ir_data_temp | 0x01;  //80
					}
					else
					{
					ir_data_temp = ir_data_temp & 0xFE; //7f
					}
					if(IR_SETP==17)
					{
					 ADDR_H  = ir_data_temp;
					}
					else if(IR_SETP==33)
					{
					 ADDR_L = ir_data_temp;
					}
					else if( IR_SETP ==49 )
					{
					 IR_KEY_L = ir_data_temp;
					}

					ir_data_temp =ir_data_temp<<1;  //>>
*/
					//IR_KEY_H = IR_KEY_H >> 1;
					IR_KEY_L = IR_KEY_L << 1;
					ADDR_H = ADDR_H <<< 1;
					ADDR_L = ADDR_L <<< 1;
					if (ir_tick > 15)  		IR_KEY_L .0 = 1;
					else					IR_KEY_L .0 = 0;

					if (IR_SETP == 49)
					{
						if( (IR_KEY_L1 != IR_KEY_L ) )  IR_KEY_L1 = IR_KEY_L;
						else
						{
							ir_end_f = 1;
							ir_ok_F = 1;
						}
						ir_long_tick = 0;
					}
				}
				else	ir_err_f = 1;
			}
			else		IR_SETP = 1;
			ir_tick = 0;
			IR_H_F = 0;
		}
	}
#endif

#if XL_wuxian_IR

	if (IR_in == 1)
	{
		if (!IR_H_F)
		{
			if (IR_SETP == 1)
			{
				if ((ir_tick > 60) ) // && (ir_tick < 254) 9MS   6-12MS
				{
					IR_SETP++;
					ir_long_tick_err = 0;
				}
				else
					ir_err_f = 1;
			}
			else if ((IR_SETP >= 3) && (IR_SETP < 67))
			{
				if ((ir_tick > 4) && (ir_tick < 20)) // 200-1000
				{
					if(ir_repeat_f==1)
					{
                     ir_repeat_f=0;
				  	 IR_SETP=0;
					}
                    else	IR_SETP++;
				}
				else		ir_err_f = 1;	
			}
			ir_tick = 0;
			IR_H_F = 1;
		}
	}
	else
	{
		if (IR_H_F)
		{
			ir_long_tick = 0;
			if (IR_SETP == 0)	IR_SETP++;
			else if (IR_SETP == 2)
			{
				if ((ir_tick > 60) && (ir_tick < 110)) // 50*60=3ms  3000-5500
				{
					ir_repeat_f = 0;
					IR_KEY_H = 0;
					IR_KEY_L = 0;
					ADDR_H = 0;
					ADDR_L = 0;
					IR_SETP++;
				}

				/////////////////   �ӳ����ĵط�

#if XL_wuxian_IR_long_key
				else  if((ir_tick>35)&&(ir_tick<60)) //50*60=3ms  <
				{
					IR_SETP++;
                   	ir_ok_F=1;
					ir_repeat_f = 1;
					//IR_Long_KEY_tick=0;
				}
#endif
				////////////////////////
				else	ir_err_f = 1;
			}
			else if ((IR_SETP >= 2) && (IR_SETP < 67))
			{
				if ((ir_tick > 4) && (ir_tick < 40)) // 400-2MS
				{
					IR_SETP++;
IR_F:
/*
					if (ir_tick > 20)
					{
						ir_data_temp = ir_data_temp | 0x80;  
					}
					else
					{
						ir_data_temp = ir_data_temp & 0x7F; 
					}

					if(IR_SETP==19)
					{
						ADDR_L  = ir_data_temp;
					}
					else if(IR_SETP==35)
					{
						ADDR_H  = ir_data_temp;
					}
					else if(IR_SETP==51)
					{
						IR_KEY_L  = ir_data_temp;
					}
					else if(IR_SETP==67)
					{
						IR_KEY_H = ir_data_temp;
					}
					ir_data_temp =ir_data_temp>>1;
*/

					IR_KEY_H = IR_KEY_H >> 1;
					IR_KEY_L = IR_KEY_L >>>   1;
					ADDR_H = ADDR_H >>> 1;
					ADDR_L = ADDR_L >>> 1;
					if (ir_tick > 20)		IR_KEY_H .7 = 1;
					else					IR_KEY_H .7 = 0;
					if (IR_SETP == 67)
					{
						ir_end_f = 1;
						ir_ok_F = 1;
						ir_long_tick_err = 0;
						ir_deal_F = 0;
						ir_count = 0;
						//ir_long_tick = 0;
					}
				}
				else	ir_err_f = 1;
			}
			else if (IR_SETP == 68)	IR_SETP++;
			else	IR_SETP = 1;
			ir_tick = 0;
			IR_H_F = 0;
		}
	}
	if (ir_err_f )
	{
	//	ir_long_tick = 0;
		ir_err_f = 0;
		ir_repeat_f = 0;
		IR_SETP = 0;
		IR_KEY_L = 0xFF;
		ir_data_temp = 0;
	//	ir_end_f   = 0;
	}

#endif
}

#define key_mode_init_L 8

#if XL_wuxian_IR
	#define ir_count_repeat 3
#endif

#if XL_wuxian_433
	#define ir_count_repeat 6
#endif
/*
IR_KEY_L_deal 

250   short_IR_key add color
251    long_IR_key add color
252   short_IR_key sub color
253    long_IR_key sub color

200   short_IR_key add light
201    long_IR_key add light
202   short_IR_key sub light
203    long_IR_key sub light

100   short_IR_key add speed
101    long_IR_key add speed
102   short_IR_key sub speed
103    long_IR_key sub speed

50   short_IR_key add MIC_LMD
51    long_IR_key add MIC_LMD
52   short_IR_key sub MIC_LMD
53    long_IR_key sub MIC_LMD
*/

void IR_KEY_DEAL()  //
{         
	byte key_loop_time = 0;

	if ( ir_ok_F == 0 )
		return;
	ir_ok_F = 0;  	
	
	if (ir_count >= ir_count_repeat )
	{
	//	ir_count = ir_count_repeat;
		#if XL_wuxian_duima & 1//IC_PMS152
			IR_Dui_Ma_DEAL();  	//	duima
		#endif

		return;
	}
	ir_count++; // 

	if (ir_deal_F == 1)
		return;
	ir_deal_F = 1;  

#if XL_wuxian_duima & 1//IC_PMS152
	if ( ADDR_H != ADDR_H_check  ) // 0x55 0xE2 0xE2 0xFF 0xBA 0xFF  0x12 0x00 0xE2
		return;			 //   0x28
	if ( ADDR_L != ADDR_L_check  ) //0xFF  0xFB 0xFF 0x21 0xFB  0xF6 0xCF 0xEF 0xFB
		return;			 // 
#endif

#if IR_KEY_L_ON_OFF
	if( IR_KEY_L == IR_KEY_L_ON )      // 0x25 short_mode_init_F = 1;
	{
		if( IR_LED_ON_F )	IR_LED_ON_F = 0;
		else				IR_LED_ON_F = 1;  // Color_mode = led_mode;
	}  
#else
	if( IR_KEY_L == IR_KEY_L_OFF )    IR_LED_ON_F = 0;   // 0x25
	if( IR_KEY_L == IR_KEY_L_ON )     IR_LED_ON_F = 1;// 0x25
#endif
//	disgint;
	if( IR_LED_ON_F )      // 0x25
	{  
		switch( IR_KEY_L )
		{          
			case IR_KEY_L_dingshi_60_min:  //0x0C  IR_KEY_L_speed_add
				sleep_mode_init_F = 1;
				Time_mode = 60;
			//	short_mode_init_F = 1; 
				Flash_warning = 1;
			//	LED_W_PWM_expect = 0;
			//	LED_Y_PWM_expect = 0;
				LED_Y_PWM_temp 	 = 0;
				LED_W_PWM_temp 	 = 0;
				break;  
			case IR_KEY_L_user_color:  //0x0C  IR_KEY_L_speed_add
//				if( fade_step == 0 )
				{
					led_level = led_level_Max;
				//	led_mode  = led_mode_Mid;//  led_mode_Max
					short_mode_init_F = 1;
				}
				break;   
			case IR_KEY_L_color_add:  //0x0C  IR_KEY_L_speed_add
			//	if( fade_step == 0 )
				{
					IR_KEY_L_deal = 250; 
					#if IR_Long_key
						ir_deal_F = 0;  
						if(ir_count >= ir_count_repeat - 1) 	IR_KEY_L_deal  = 251;//
					#endif
				}

				break;   
			case IR_KEY_L_color_sub:  //0x0C  IR_KEY_L_speed_add
			//	if( fade_step == 0 )
				{
					IR_KEY_L_deal = 252; 
					#if IR_Long_key
						ir_deal_F = 0;  
						if(ir_count >= ir_count_repeat - 1) 	IR_KEY_L_deal  = 253;//
					#endif
				}
				break;   
			case IR_KEY_L_levle_add:  //0x0C  IR_KEY_L_speed_add
				IR_KEY_L_deal = 200; 
				#if IR_Long_key
					ir_deal_F = 0;  
					if(ir_count >= ir_count_repeat - 1)  	IR_KEY_L_deal  = 201;//
				#endif
				break;   

			case IR_KEY_L_levle_sub: //   0x0B
				IR_KEY_L_deal = 202; 
				#if IR_Long_key
					ir_deal_F = 0;       
					if(ir_count >= ir_count_repeat - 1) 		IR_KEY_L_deal  = 203;//
				#endif
				break;  
			case IR_KEY_L_user_color1:  //W xiuxian  
			//	led_level = led_level_Max;
				led_mode = led_mode_Max_2_4;
				//short_mode_init_F = 1;
				break; 

			case IR_KEY_L_user_color2:  //YD
			//	led_level = led_level_Max;
				led_mode = led_mode_Max_3_4;
			//	short_mode_init_F = 1;
				break; 
			case IR_KEY_L_user_color3:  //BG  IR_KEY_L_speed_add
			//	led_level = led_level_Max_2_4;
				led_mode = led_mode_Max_4_4;
			//	short_mode_init_F = 1;
				break; 
			case IR_KEY_L_user_color4 :  //BR  IR_KEY_L_speed_add
			//	led_level = led_level_Max_2_4;
				led_mode = led_mode_Max_1_4;
			//	short_mode_init_F = 1;
				break; 
			case IR_KEY_L_user_color5:  //XYD  IR_KEY_L_speed_add
			//	led_level = led_level_Max_1_4;
				led_mode = 0;
			//	short_mode_init_F = 1;
				break;   
		}
//		engint;
	}              

}
#endif
#endif